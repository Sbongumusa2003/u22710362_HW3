@{
    ViewBag.Title = "Sales Reports & Analytics";
}

<div class="container-fluid mt-4">
    <h1 class="text-center mb-4 text-primary">
        <i class="bi bi-graph-up"></i> Sales Reports & Analytics
    </h1>

    @if (ViewBag.Error != null)
    {
        <div class="alert alert-danger">@ViewBag.Error</div>
    }

    <!-- Report Controls -->
    <div class="card shadow-sm mb-4">
        <div class="card-body bg-light">
            <div class="row">
                <div class="col-md-8">
                    <h5><i class="bi bi-file-earmark-pdf"></i> Export Report</h5>
                    <p class="text-muted">Generate and save a PDF report with current data</p>
                </div>
                <div class="col-md-4 text-end">
                    <button id="generatePdfBtn" class="btn btn-danger btn-lg">
                        <i class="bi bi-file-earmark-pdf"></i> Generate PDF Report
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Summary Cards -->
    <div class="row mb-4">
        <div class="col-md-3">
            <div class="card text-white bg-primary shadow">
                <div class="card-body">
                    <h5 class="card-title"><i class="bi bi-cart-check"></i> Total Orders</h5>
                    <h2 id="totalOrders">Loading...</h2>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card text-white bg-success shadow">
                <div class="card-body">
                    <h5 class="card-title"><i class="bi bi-currency-dollar"></i> Total Revenue</h5>
                    <h2 id="totalRevenue">Loading...</h2>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card text-white bg-info shadow">
                <div class="card-body">
                    <h5 class="card-title"><i class="bi bi-box-seam"></i> Products Sold</h5>
                    <h2 id="totalProducts">Loading...</h2>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card text-white bg-warning shadow">
                <div class="card-body">
                    <h5 class="card-title"><i class="bi bi-people"></i> Active Customers</h5>
                    <h2 id="activeCustomers">Loading...</h2>
                </div>
            </div>
        </div>
    </div>

    <!-- Charts Row 1 -->
    <div class="row mb-4">
        <div class="col-md-6">
            <div class="card shadow">
                <div class="card-header bg-primary text-white">
                    <h5 class="mb-0"><i class="bi bi-bar-chart"></i> Sales by Brand</h5>
                </div>
                <div class="card-body">
                    <canvas id="brandSalesChart"></canvas>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="card shadow">
                <div class="card-header bg-success text-white">
                    <h5 class="mb-0"><i class="bi bi-pie-chart"></i> Sales by Category</h5>
                </div>
                <div class="card-body">
                    <canvas id="categorySalesChart"></canvas>
                </div>
            </div>
        </div>
    </div>

    <!-- Charts Row 2 -->
    <div class="row mb-4">
        <div class="col-md-12">
            <div class="card shadow">
                <div class="card-header bg-info text-white">
                    <h5 class="mb-0"><i class="bi bi-graph-up-arrow"></i> Monthly Sales Trend (Last 6 Months)</h5>
                </div>
                <div class="card-body">
                    <canvas id="monthlySalesChart"></canvas>
                </div>
            </div>
        </div>
    </div>

    <!-- Data Tables -->
    <div class="row mb-4">
        <div class="col-md-6">
            <div class="card shadow">
                <div class="card-header bg-warning text-dark">
                    <h5 class="mb-0"><i class="bi bi-trophy"></i> Top 10 Products</h5>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-striped table-hover">
                            <thead class="table-warning">
                                <tr>
                                    <th>#</th>
                                    <th>Product Name</th>
                                    <th>Quantity Sold</th>
                                    <th>Revenue</th>
                                </tr>
                            </thead>
                            <tbody id="popularProductsTable">
                                <!-- Data will be populated by JavaScript -->
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="card shadow">
                <div class="card-header bg-danger text-white">
                    <h5 class="mb-0"><i class="bi bi-person-badge"></i> Staff Performance</h5>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-striped table-hover">
                            <thead class="table-danger">
                                <tr>
                                    <th>#</th>
                                    <th>Staff Name</th>
                                    <th>Orders</th>
                                    <th>Total Sales</th>
                                </tr>
                            </thead>
                            <tbody id="staffPerformanceTable">
                                <!-- Data will be populated by JavaScript -->
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Store Performance -->
    <div class="row mb-4">
        <div class="col-md-12">
            <div class="card shadow">
                <div class="card-header bg-secondary text-white">
                    <h5 class="mb-0"><i class="bi bi-shop"></i> Store Performance</h5>
                </div>
                <div class="card-body">
                    <canvas id="storePerformanceChart"></canvas>
                </div>
            </div>
        </div>
    </div>

    <!-- Document Archive -->
    <div class="card shadow mb-4">
        <div class="card-header bg-dark text-white">
            <h5 class="mb-0"><i class="bi bi-archive"></i> Document Archive</h5>
        </div>
        <div class="card-body">
            if (ViewBag.SavedReports != null && ViewBag.SavedReports.Count > 0)
            {
                <div class="table-responsive">
                    <table class="table table-striped table-hover">
                        <thead class="table-dark">
                            <tr>
                                <th>File Name</th>
                                <th>Created Date</th>
                                <th>File Size</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var report in ViewBag.SavedReports)
                            {
                                <tr>
                                    <td><i class="bi bi-file-earmark-pdf text-danger"></i> @report.FileName</td>
                                    <td>@report.CreatedDate.ToString("yyyy-MM-dd HH:mm")</td>
                                    <td>@((report.FileSize / 1024).ToString("N0")) KB</td>
                                    <td>
                                        <button class="btn btn-sm btn-primary download-btn" data-filename="@report.FileName">
                                            <i class="bi bi-download"></i> Download
                                        </button>
                                        <button class="btn btn-sm btn-danger delete-btn" data-filename="@report.FileName">
                                            <i class="bi bi-trash"></i> Delete
                                        </button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <div class="alert alert-info">
                    <i class="bi bi-info-circle"></i> No saved reports found. Generate your first report using the button above!
                </div>
            }
        </div>
    </div>
</div>

@section scripts {
    <!-- jQuery CDN -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <!-- Chart.js CDN -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.9.1/chart.min.js"></script>
    <!-- jsPDF CDN -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>

    <script>
        // Data from server
        var brandSalesData = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.BrandSales));
        var categorySalesData = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.CategorySales));
        var staffPerformanceData = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.StaffPerformance));
        var monthlySalesData = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.MonthlySales));
        var popularProductsData = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.PopularProducts));
        var storePerformanceData = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.StorePerformance));

        // Calculate summary statistics
        var totalOrders = monthlySalesData.reduce((sum, m) => sum + m.TotalOrders, 0);
        var totalRevenue = monthlySalesData.reduce((sum, m) => sum + m.TotalSales, 0);
        var totalProducts = popularProductsData.reduce((sum, p) => sum + p.TotalQuantitySold, 0);

        document.getElementById('totalOrders').textContent = totalOrders.toLocaleString();
        document.getElementById('totalRevenue').textContent = '$' + totalRevenue.toLocaleString('en-US', { minimumFractionDigits: 2 });
        document.getElementById('totalProducts').textContent = totalProducts.toLocaleString();
        document.getElementById('activeCustomers').textContent = 'N/A';

        // Chart colors
        var chartColors = [
            '#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF',
            '#FF9F40', '#FF6384', '#C9CBCF', '#4BC0C0', '#FF6384'
        ];

        // 1. Brand Sales Chart (Bar Chart)
        new Chart(document.getElementById('brandSalesChart'), {
            type: 'bar',
            data: {
                labels: brandSalesData.map(b => b.BrandName),
                datasets: [{
                    label: 'Total Sales ($)',
                    data: brandSalesData.map(b => b.TotalSales),
                    backgroundColor: chartColors,
                    borderColor: chartColors.map(c => c),
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: true,
                plugins: {
                    legend: { display: false },
                    title: { display: false }
                },
                scales: {
                    y: {
                        beginAtZero: true,
                        ticks: {
                            callback: function(value) {
                                return '$' + value.toLocaleString();
                            }
                        }
                    }
                }
            }
        });

        // 2. Category Sales Chart (Pie Chart)
        new Chart(document.getElementById('categorySalesChart'), {
            type: 'pie',
            data: {
                labels: categorySalesData.map(c => c.CategoryName),
                datasets: [{
                    data: categorySalesData.map(c => c.TotalSales),
                    backgroundColor: chartColors,
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: true,
                plugins: {
                    legend: { position: 'bottom' },
                    tooltip: {
                        callbacks: {
                            label: function(context) {
                                return context.label + ': $' + context.parsed.toLocaleString();
                            }
                        }
                    }
                }
            }
        });

        // 3. Monthly Sales Trend (Line Chart)
        var monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];
        new Chart(document.getElementById('monthlySalesChart'), {
            type: 'line',
            data: {
                labels: monthlySalesData.map(m => monthNames[m.Month - 1] + ' ' + m.Year),
                datasets: [{
                    label: 'Sales ($)',
                    data: monthlySalesData.map(m => m.TotalSales),
                    borderColor: '#36A2EB',
                    backgroundColor: 'rgba(54, 162, 235, 0.2)',
                    tension: 0.4,
                    fill: true
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: true,
                plugins: {
                    legend: { display: true },
                    tooltip: {
                        callbacks: {
                            label: function(context) {
                                return 'Sales: $' + context.parsed.y.toLocaleString();
                            }
                        }
                    }
                },
                scales: {
                    y: {
                        beginAtZero: true,
                        ticks: {
                            callback: function(value) {
                                return '$' + value.toLocaleString();
                            }
                        }
                    }
                }
            }
        });

        // 4. Store Performance Chart (Horizontal Bar)
        new Chart(document.getElementById('storePerformanceChart'), {
            type: 'bar',
            data: {
                labels: storePerformanceData.map(s => s.StoreName),
                datasets: [{
                    label: 'Total Sales ($)',
                    data: storePerformanceData.map(s => s.TotalSales),
                    backgroundColor: '#6C757D',
                    borderColor: '#495057',
                    borderWidth: 1
                }]
            },
            options: {
                indexAxis: 'y',
                responsive: true,
                maintainAspectRatio: true,
                plugins: {
                    legend: { display: false }
                },
                scales: {
                    x: {
                        beginAtZero: true,
                        ticks: {
                            callback: function(value) {
                                return '$' + value.toLocaleString();
                            }
                        }
                    }
                }
            }
        });

        // Populate Popular Products Table
        var productsTableHtml = '';
        popularProductsData.forEach((product, index) => {
            productsTableHtml += `
                <tr>
                    <td>${index + 1}</td>
                    <td>${product.ProductName}</td>
                    <td>${product.TotalQuantitySold.toLocaleString()}</td>
                    <td>$${product.TotalRevenue.toLocaleString('en-US', { minimumFractionDigits: 2 })}</td>
                </tr>
            `;
        });
        document.getElementById('popularProductsTable').innerHTML = productsTableHtml;

        // Populate Staff Performance Table
        var staffTableHtml = '';
        staffPerformanceData.forEach((staff, index) => {
            staffTableHtml += `
                <tr>
                    <td>${index + 1}</td>
                    <td>${staff.StaffName}</td>
                    <td>${staff.TotalOrders.toLocaleString()}</td>
                    <td>$${staff.TotalSales.toLocaleString('en-US', { minimumFractionDigits: 2 })}</td>
                </tr>
            `;
        });
        document.getElementById('staffPerformanceTable').innerHTML = staffTableHtml;

        // Generate PDF Report
        document.getElementById('generatePdfBtn').addEventListener('click', function() {
            const { jsPDF } = window.jspdf;
            const doc = new jsPDF('p', 'mm', 'a4');

            // Title
            doc.setFontSize(20);
            doc.setTextColor(0, 123, 255);
            doc.text('BikeStores Sales Report', 105, 20, { align: 'center' });
            doc.setFontSize(10);
            doc.setTextColor(0, 0, 0);
            doc.text('Generated: ' + new Date().toLocaleString(), 105, 28, { align: 'center' });

            // Summary Section
            doc.setFontSize(14);
            doc.setTextColor(40, 40, 40);
            doc.text('Executive Summary', 20, 40);
            doc.setFontSize(10);
            doc.text(`Total Orders: ${totalOrders.toLocaleString()}`, 20, 50);
            doc.text(`Total Revenue: $${totalRevenue.toLocaleString('en-US', { minimumFractionDigits: 2 })}`, 20, 56);
            doc.text(`Products Sold: ${totalProducts.toLocaleString()}`, 20, 62);

            // Brand Sales Section
            doc.setFontSize(14);
            doc.text('Top Brands by Sales', 20, 75);
            var yPos = 82;
            doc.setFontSize(9);
            brandSalesData.slice(0, 5).forEach((brand, idx) => {
                doc.text(`${idx + 1}. ${brand.BrandName}: $${brand.TotalSales.toLocaleString('en-US', { minimumFractionDigits: 2 })}`, 25, yPos);
                yPos += 6;
            });

            // Popular Products Section
            doc.setFontSize(14);
            yPos += 8;
            doc.text('Top 5 Products', 20, yPos);
            yPos += 7;
            doc.setFontSize(9);
            popularProductsData.slice(0, 5).forEach((product, idx) => {
                doc.text(`${idx + 1}. ${product.ProductName}`, 25, yPos);
                doc.text(`Qty: ${product.TotalQuantitySold} | Revenue: $${product.TotalRevenue.toLocaleString('en-US', { minimumFractionDigits: 2 })}`, 25, yPos + 4);
                yPos += 10;
            });

            // Staff Performance Section
            doc.setFontSize(14);
            yPos += 8;
            if (yPos > 250) {
                doc.addPage();
                yPos = 20;
            }
            doc.text('Staff Performance', 20, yPos);
            yPos += 7;
            doc.setFontSize(9);
            staffPerformanceData.slice(0, 5).forEach((staff, idx) => {
                doc.text(`${idx + 1}. ${staff.StaffName}`, 25, yPos);
                doc.text(`Orders: ${staff.TotalOrders} | Sales: $${staff.TotalSales.toLocaleString('en-US', { minimumFractionDigits: 2 })}`, 25, yPos + 4);
                yPos += 10;
            });

            // Footer
            doc.setFontSize(8);
            doc.setTextColor(128, 128, 128);
            doc.text('BikeStores Management System - Confidential Report', 105, 285, { align: 'center' });

            // Save the PDF
            var fileName = 'BikeStores_Report_' + new Date().getTime() + '.pdf';
            doc.save(fileName);

            alert('Report generated successfully! In production, this would be saved to the document archive.');
        });

        // Download report functionality using jQuery
        $(document).on('click', '.download-btn', function() {
            var fileName = $(this).data('filename');
            var form = $('<form method="POST" action="@Url.Action("DownloadReport", "Report")"></form>');
            form.append($('<input type="hidden" name="fileName" value="' + fileName + '">'));
            form.append('@Html.AntiForgeryToken()');
            $('body').append(form);
            form.submit();
        });

        // Delete report functionality using jQuery
        $(document).on('click', '.delete-btn', function() {
            if (!confirm('Are you sure you want to delete this report?')) return;

            var fileName = $(this).data('filename');
            var btn = $(this);

            // Using jQuery post method instead of ajax
            $.post('@Url.Action("DeleteReport", "Report")', {
                fileName: fileName,
                __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
            })
            .done(function(response) {
                if (response.success) {
                    btn.closest('tr').fadeOut(function() { $(this).remove(); });
                    alert('Report deleted successfully!');
                } else {
                    alert('Error: ' + response.message);
                }
            })
            .fail(function() {
                alert('Error deleting report. Please try again.');
            });
        });
    </script>
}